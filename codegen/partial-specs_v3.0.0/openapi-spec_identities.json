{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Identities"
      }
    ],
    "paths":{
      "/identities":{
        "get":{
          "tags":[
            "Identities"
          ],
          "summary":"Getting all identities",
          "operationId":"getAllIdentities",
          "description":"This method renders identities ordered by creation date (descending). Only identities in sources where token’s user has “read” permission are returned.",
          "parameters":[
            {
              "name":"community_id",
              "description":"To filter identities on given community id.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"identity_group_id",
              "description":"To filter on given group id.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"user_id",
              "description":"To filter identities on given user id.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"sort",
              "description":"To change the criteria chosen to sort the identities. The value can be “created_at” or",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string",
                "enum":[
                  "created_at",
                  "updated_at"
                ]
              }
            },
            {
              "name":"foreign_id",
              "description":"To filter identities on given user id",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"uuid",
              "description":"To filter identities on given uuid",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"string",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllIdentitiesResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/identities/{identityId}":{
        "get":{
          "tags":[
            "Identities"
          ],
          "summary":"Getting an identity from its id",
          "operationId":"getIdentity",
          "description":"This method renders an identity from given id. If token’s user does not have “read” on identity’s source community a 404 HTTP response will be returned.",
          "parameters":[
            {
              "name":"identityId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Identity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllIdentitiesResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Identity"
              }
            }
          }
        },
        "Identity":{
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "community_id":{
              "type":"string"
            },
            "community_url":{
              "type":"string"
            },
            "company":{
              "type":"string"
            },
            "email":{
              "type":"string"
            },
            "firstname":{
              "type":"string"
            },
            "foreign_id":{
              "type":"string"
            },
            "gender":{
              "type":"string"
            },
            "home_phone":{
              "type":"string"
            },
            "identity_group_id":{
              "type":"string"
            },
            "lastname":{
              "type":"string"
            },
            "mobile_phone":{
              "type":"string"
            },
            "screenname":{
              "type":"string"
            },
            "user_ids":{
              "type":"array",
              "items":{
                "type":"string"
              }
            },
            "uuid":{
              "type":"string"
            },
            "extra_values":{
              "type":"object"
            },
            "display_name":{
              "type":"string"
            },
            "avatar_url":{
              "type":"string"
            },
            "type":{
              "type":"string"
            }
          }
        }
      }
    }
  }