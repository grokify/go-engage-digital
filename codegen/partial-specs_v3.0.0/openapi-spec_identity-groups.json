{
  "openapi":"3.0.0",
  "info":{
    "description":"",
    "version":"1.0",
    "title":"Engage Digital API",
    "termsOfService":"https://developer.ringcentral.com"
  },
  "tags":[
    {
      "name":"Identity Groups"
    }
  ],
  "paths":{
    "/identity_groups":{
      "get":{
        "tags":[
          "Identity Groups"
        ],
        "summary":"Getting all identity groups",
        "operationId":"getAllIdentityGroups",
        "description":"This method renders identity groups ordered by creation date (descending). Note that identity_group are created in a lazily only when data are manually added to an identity OR a two identity are merged altogether. That means that some identity DON’T have identity_group, and identity_group do not cover all identities.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"firstname",
            "in":"query",
            "description":"To filter groups on given firstname.",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"lastname",
            "in":"query",
            "description":"To filter groups on given lastname.",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"email",
            "in":"query",
            "description":"To filter groups that have given email.",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"uuid",
            "in":"query",
            "description":"To filter groups that have given uuid.",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"sort",
            "in":"query",
            "description":"To change the criteria chosen to sort the identities. The value can be “created_at” or “updated_at”.",
            "required":false,
            "schema":{
              "type":"string",
              "enum":[
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name":"offset",
            "in":"query",
            "description":"The record index to start. Default value is 0.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          },
          {
            "name":"limit",
            "in":"query",
            "description":"The max number of records to return. Default value is 30, max value is 150.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/GetAllIdentityGroupsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/identity_groups/{identityGroupId}":{
      "get":{
        "tags":[
          "Identity Groups"
        ],
        "summary":"Getting an identity group from its id",
        "operationId":"getIdentityGroup",
        "description":"This method renders an identity group from given id.",
        "parameters":[
          {
            "name":"identityGroupId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/IdentityGroup"
                }
              }
            }
          }
        }
      },
      "put":{
        "tags":[
          "Identity Groups"
        ],
        "summary":"Updating an identity group",
        "operationId":"updateIdentityGroup",
        "description":"This method updates an identity group from given attributes and renders it in case of success.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"identityGroupId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"company",
            "in":"query",
            "required":false,
            "description":"Identity company.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"custom_field_values[custom_field_key]",
            "in":"query",
            "required":false,
            "description":"Identity custom field with key « custom_field_key ». It",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"emails",
            "in":"query",
            "required":false,
            "description":"Identity emails (multiple).",
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"firstname",
            "in":"query",
            "required":false,
            "description":"Identity firstname.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"gender",
            "in":"query",
            "required":false,
            "description":"Identity’s gender. It can be \"man\", \"woman\" or empty.",
            "schema":{
              "type":"string",
              "enum":[
                "man",
                "woman"
              ]
            }
          },
          {
            "name":"home_phones",
            "in":"query",
            "required":false,
            "description":"Identity home phones (mutiple).",
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"lastname",
            "in":"query",
            "required":false,
            "description":"Identity lastname.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"mobile_phones",
            "in":"query",
            "required":false,
            "description":"Identity mobile phones (multiple).",
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"notes",
            "in":"query",
            "required":false,
            "description":"Identity notes.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"tag_ids",
            "in":"query",
            "required":false,
            "description":"Identity tag ids (multiple).",
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/IdentityGroup"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers":[
    {
      "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
    }
  ],
  "components":{
    "schemas":{
      "GetAllIdentityGroupsResponse":{
        "properties":{
          "count":{
            "type":"integer",
            "format":"int32"
          },
          "limit":{
            "type":"integer",
            "format":"int32"
          },
          "offset":{
            "type":"integer",
            "format":"int32"
          },
          "records":{
            "type":"array",
            "items":{
              "$ref":"#/components/schemas/IdentityGroup"
            }
          }
        }
      },
      "IdentityGroup":{
        "required":[
          "id"
        ],
        "properties":{
          "id":{
            "type":"string"
          },
          "created_at":{
            "type":"string",
            "format":"date-time"
          },
          "updated_at":{
            "type":"string",
            "format":"date-time"
          },
          "company":{
            "type":"string"
          },
          "custom_field_values":{
            "type":"object"
          },
          "emails":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "firstname":{
            "type":"string"
          },
          "gender":{
            "type":"string"
          },
          "home_phones":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "identity_ids":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "lastname":{
            "type":"string"
          },
          "mobile_phones":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "notes":{
            "type":"string"
          },
          "tag_ids":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "avatar_url":{
            "type":"string"
          }
        }
      }
    }
  }
}