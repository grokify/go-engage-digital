{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Tasks"
      }
    ],
    "paths":{
      "/tasks":{
        "get":{
          "tags":[
            "Tasks"
          ],
          "summary":"Getting all tasks",
          "operationId":"getAllTasks",
          "description":"This method renders tasks ordered by priority (highest first) and then by creation date (latest first).\n\nAuthorization​: only users that can read tasks.",
          "parameters":[
            {
              "name":"queue",
              "in":"query",
              "description":"To filter tasks on given queue name (filters on the “global” queue by default).The most commonly used queues are: “global” (contains every task pending assignation), “workbin_{agent_id}” (contains every tasks assigned to the {agent_id} agent, “history” (contains every processed tasks), and “undelivered” (contains every undelivered tasks). If queue is set to “workbins” all the tasks currently in a workbin will be returned.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"channel_id",
              "in":"query",
              "description":"To filter tasks on given channel id.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"step",
              "in":"query",
              "description":"To filter tasks on the step they’re currently in.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllTasksResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{taskId}":{
        "get":{
          "tags":[
            "Tasks"
          ],
          "summary":"Getting a task from its id",
          "operationId":"getTask",
          "description":"This method renders a task from given id.",
          "parameters":[
            {
              "name":"taskId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{taskId}/transfer":{
        "put":{
          "tags":[
            "Tasks"
          ],
          "summary":"Transferring a task",
          "operationId":"transferTask",
          "description":"This method transfers an existing task and renders it in case of success.\n\nAuthorization​: only users that have the right to monitor the task view.",
          "parameters":[
            {
              "name":"taskId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"agent_ids",
              "in":"query",
              "required":false,
              "explode":true,
              "description":"List of agents to transfer the task to (multiple).",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"bypass",
              "in":"query",
              "required":false,
              "description":"Force the transfer to the first agent in agent_ids if set. When bypass is used,",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"category_ids",
              "in":"query",
              "required":false,
              "explode":true,
              "description":"Filter agents receiving the task depending on their categories.",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"language",
              "in":"query",
              "required":false,
              "description":"Filter agents receiving the task depending on their spoken languages.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"team_ids",
              "in":"query",
              "required":false,
              "explode":true,
              "description":"Filter agents receiving the task depending on their teams.",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"comment",
              "in":"query",
              "required":false,
              "description":"Add a comment to the task.",
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{taskId}/move":{
        "delete":{
          "tags":[
            "Tasks"
          ],
          "summary":"Move a task to another queue",
          "operationId":"moveTask",
          "description":"This method changes a task queue and renders it in case of success. Only accepts “undelivered” and special queue defined in topology (e.g. triage).\n\nAuthorization​: only users that have the right to monitor the task view.",
          "parameters":[
            {
              "name":"taskId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"queue",
              "in":"query",
              "required":true,
              "description":"Name of the queue task has to be moved in.",
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllTasksResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Task"
              }
            }
          }
        },
        "Task":{
          "required":[
            "id"
          ],
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "channel_id":{
              "type":"string"
            },
            "priority":{
              "type":"integer"
            },
            "content_id":{
              "type":"string"
            },
            "intervention_id":{
              "type":"string"
            },
            "thread_id":{
              "type":"string"
            },
            "agent_ids":{
              "type":"array",
              "items":{
                "type":"string"
              }
            },
            "accepted_at":{
              "type":"string",
              "format":"date-time"
            },
            "completed_at":{
              "type":"string",
              "format":"date-time"
            },
            "expire_at":{
              "type":"string",
              "format":"date-time"
            },
            "locked_at":{
              "type":"string",
              "format":"date-time"
            },
            "transfered_at":{
              "type":"string",
              "format":"date-time"
            },
            "step":{
              "type":"string"
            }
          }
        }
      }
    }
  }