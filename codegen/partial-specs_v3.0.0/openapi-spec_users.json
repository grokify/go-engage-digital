{
    "openapi": "3.0.0",
    "info": {
      "description": "",
      "version": "1.0",
      "title": "Engage Digital API",
      "termsOfService": "https://developer.ringcentral.com"
    },
    "tags": [
      {
        "name": "Users"
      }
    ],
    "paths": {
      "/users": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Getting all users",
          "operationId": "getAllUsers",
          "description": "This method renders users ordered by creation date (descending).\n\nAuthorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the users belonging to at least one of the teams he’s the leader of will be returned.",
          "parameters": [
            {
              "name": "email",
              "description": "To filter users on given email.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "category_id",
              "description": "To filter users on given category id.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identity_id",
              "description": "To filter users on given identity id.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "external_id",
              "description": "To filter users on given external id.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "role_id",
              "description": "To filter users on given role id.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "team_id",
              "description": "To filter users on given team id.",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The record index to start. Default value is 0.",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The max number of records to return. Default value is 30, max value is 150.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetAllUsersResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{userId}": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Getting a user from its id",
          "operationId": "getUser",
          "description": "This method renders a user from given id.",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "summary": "Deleting a user",
          "operationId": "deleteUser",
          "description": "This method deletes the given user. In case of success it renders the deleted user, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. The user affiliated to the token must have at least all the permissions of the other user. If the user affiliated to the token has the manage_users_of_my_teams permission, the deleted user will need to belong to at least one of the teams he’s the leader of.",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers": [
      {
        "url": "https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components": {
      "schemas": {
        "GetAllUsersResponse": {
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "records": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "User": {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "category_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "email": {
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "external_id": {
              "type": "string"
            },
            "firstname": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "identity_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lastname": {
              "type": "string"
            },
            "locale": {
              "type": "string"
            },
            "nickname": {
              "type": "string"
            },
            "rc_user_id": {
              "type": "string"
            },
            "role_id": {
              "type": "string"
            },
            "spoken_languages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "team_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "timezone": {
              "type": "string"
            },
            "invitation_pending": {
              "type": "boolean"
            }
          }
        }
      }
    }
  }