{
  "openapi":"3.0.0",
  "info":{
    "description":"",
    "version":"1.0",
    "title":"Engage Digital API",
    "termsOfService":"https://developer.ringcentral.com"
  },
  "tags":[
    {
      "name":"Contents"
    }
  ],
  "paths":{
    "/contents":{
      "get":{
        "tags":[
          "Contents"
        ],
        "summary":"Contents",
        "operationId":"getAllContents",
        "description":"This method renders contents ordered by creation date (descending). Only contents in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"q",
            "in":"query",
            "description":"To filter contents on given query. Query works exactly like threads query but only have those keywords: intervention,identity, identity_group, source, status_in, thread or text. Order can be created_at.desc (default) or created_at.asc. e.g. q=intervention:\"7f946431b6eebffafae642cc\"%20source:\"d19c81948c137d86dac77216\" Please refer to ​Search & filtering parameters​ for more details.",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"offset",
            "in":"query",
            "description":"The record index to start. Default value is 0.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          },
          {
            "name":"limit",
            "in":"query",
            "description":"The max number of records to return. Default value is 30, max value is 150.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/GetAllContentsResponse"
                }
              }
            }
          }
        }
      },
      "post":{
        "tags":[
          "Contents"
        ],
        "summary":"Creating a content",
        "operationId":"createContent",
        "description":"This method allows you to create an new content. It can be a reply to another content or a content that initiate discussion. It use token’s user as content user if he is authorized. Content will be created in Dimelo Digital and pushed asynchronously to the source.\n\nReplying to a customer content is usually possible (unless the source/conversation is read only).\n\nComposing a content on the contrary depend on the source itself:\n* The source may not support it (and be purely reactive like Instagram, Messenger ...)\n* Some sources (usually public account) like Twitter or Facebook page allows to publish content without targeting specific individuals.\n* Some sources (usually non public media) require specific targeting (phone number for SMS, email address for email, customer_id ...) to be able to create a content. This is source specific and detailed under the generic parameters.\n\nAuthorization​: only users that can reply or initiate discussion (= compose) on given source. it renders also an error if in_reply_to isn’t synchronized or if in_reply_to content is not under an ​open intervention.",
        "parameters":[
          {
            "name":"author_id",
            "description":"The identity id of content. This parameter is not mandatory, by default it use the token’s user first identity on source.",
            "in":"query",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"body",
            "description":"The content’s body. This parameter is mandatory.",
            "in":"query",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"in_reply_to_id",
            "description":"The content’s id you want to reply to. If omitted, a new discussion will be created. If source does not support to initiate discussion this parameter is mandatory.",
            "in":"query",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"private",
            "description":"Created contents are public by default, set this parameter to \"1\" in order to create a private reply. It is NOT supported on every source.",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer"
            }
          },
          {
            "name":"source_id",
            "description":"The source to create content to. If you specify `in_reply_to_id` parameter, source will be determined from it. Otherwise, this parameter is mandatory.",
            "in":"query",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"attachment_ids[]",
            "description":"An array containing the attachments’ ids that need to be attached to this content.",
            "in":"query",
            "required":false,
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"title",
            "description":"For an email source. The subject of the email. This parameter is mandatory when initiating a discussion.",
            "in":"query",
            "required":false,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"to[]",
            "description":"For an email or SMS source. For an email, an array containing the email addresses used in the “To” section of the email. This parameter is mandatory when initiating a discussion. For a SMS, the number the SMS will be sent to. It must start with 00 or +, example: +33634231224 or 0033634231224. This parameter is mandatory when initiating a discussion.",
            "in":"query",
            "required":false,
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"cc[]",
            "description":"For an email source. An array containing the email addresses used in the “Cc” section of the email.",
            "in":"query",
            "required":false,
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          },
          {
            "name":"bcc[]",
            "description":"For an email source. An array containing the email addresses used in the “Bcc” section of the email.",
            "in":"query",
            "required":false,
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Content"
                }
              }
            }
          },
          "422":{
            "description":"Unprocessable Entity"
          }
        }
      }
    },
    "/contents/{contentId}":{
      "get":{
        "tags":[
          "Contents"
        ],
        "summary":"Getting a content from its id",
        "operationId":"getContent",
        "description":"This method renders a content from given id. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"contentId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Content"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}/update_categories":{
      "put":{
        "tags":[
          "Contents"
        ],
        "summary":"Categorizing a content",
        "operationId":"categorizeContent",
        "description":"This method updates the categories of a content. If token’s user does not have “read” on this content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"contentId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"category_ids[]",
            "description":"An array containing the new categories to set on the content.",
            "in":"query",
            "required":true,
            "explode":true,
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Content"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}/ignore":{
      "put":{
        "tags":[
          "Contents"
        ],
        "summary":"Ignoring a content",
        "operationId":"ignoreContent",
        "description":"Ignores a content. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no.",
        "parameters":[
          {
            "name":"contentId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Content"
                }
              }
            }
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    }
  },
  "servers":[
    {
      "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
    }
  ],
  "components":{
    "schemas":{
      "GetAllContentsResponse":{
        "properties":{
          "count":{
            "type":"integer",
            "format":"int32"
          },
          "limit":{
            "type":"integer",
            "format":"int32"
          },
          "offset":{
            "type":"integer",
            "format":"int32"
          },
          "records":{
            "type":"array",
            "items":{
              "$ref":"#/components/schemas/Content"
            }
          }
        }
      },
      "Content":{
        "required":[
          "id"
        ],
        "properties":{
          "id":{
            "type":"string"
          },
          "source_id":{
            "type":"string"
          },
          "source_url":{
            "type":"string"
          },
          "source_type":{
            "type":"string"
          },
          "thread_id":{
            "type":"string"
          },
          "in_reply_to_id":{
            "type":"string"
          },
          "in_reply_to_author_id":{
            "type":"string"
          },
          "author_id":{
            "type":"string"
          },
          "creator_id":{
            "type":"string"
          },
          "foreign_id":{
            "type":"string"
          },
          "type":{
            "type":"string"
          },
          "created_from":{
            "type":"string"
          },
          "private_message":{
            "type":"boolean"
          },
          "status":{
            "type":"string"
          },
          "intervention_id":{
            "type":"string"
          },
          "language":{
            "type":"string"
          },
          "body":{
            "type":"string"
          },
          "body_formatted":{
            "$ref":"#/components/schemas/ContentBodyFormatted"
          },
          "body_input_format":{
            "type":"string",
            "description":"values can be: text or html.",
            "enum":[
              "text",
              "html"
            ]
          },
          "title":{
            "type":"string"
          },
          "attachments_count":{
            "type":"integer"
          },
          "attachments":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "synchronization_status":{
            "type":"string"
          },
          "category_ids":{
            "description":"are content categories if none, they are default to intervention categories or thread categories",
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "created_at":{
            "type":"string",
            "format":"date-time"
          },
          "updated_at":{
            "type":"string",
            "format":"date-time"
          },
          "approval_required":{
            "type":"boolean"
          },
          "remotely_deleted":{
            "type":"boolean"
          },
          "published":{
            "type":"boolean"
          },
          "context_data":{
            "type":"object",
            "description":"is present only if the content has context_data associated. The context_data hash keys are the custom fields keys."
          }
        }
      },
      "ContentAttachment":{
        "properties":{
          "id":{
            "type":"string"
          },
          "created_at":{
            "type":"string",
            "format":"date-time"
          },
          "updated_at":{
            "type":"string",
            "format":"date-time"
          },
          "content_type":{
            "type":"string"
          },
          "size":{
            "type":"integer"
          },
          "filename":{
            "type":"string"
          },
          "foreign_id":{
            "type":"string"
          },
          "embed":{
            "type":"string"
          },
          "public?":{
            "type":"string"
          },
          "url":{
            "type":"string",
            "description":"You can download the attachments by using an API access token with the following URL: https://[your-domain].engagement.dimelo.com/attachments/[attachment_id]?access_token=[your_​ access_token]"
          }
        }
      },
      "ContentBodyFormatted":{
        "description":"always contains text a​nd​ html versions.",
        "properties":{
          "text":{
            "type":"string"
          },
          "html":{
            "type":"string"
          }
        }
      }
    }
  }
}