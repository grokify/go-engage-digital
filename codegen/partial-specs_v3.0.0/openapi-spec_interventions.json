{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Interventions"
      }
    ],
    "paths":{
      "/interventions":{
        "get":{
          "tags":[
            "Interventions"
          ],
          "summary":"Getting all interventions",
          "operationId":"getAllInterventions",
          "description":"This method renders interventions ordered by creation date (descending). Only interventions in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no.",
          "parameters":[
            {
              "name":"thread_id",
              "in":"query",
              "description":"To filter interventions on given thread id.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"user_id",
              "in":"query",
              "description":"To filter interventions on given user id.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"identity_group_id",
              "in":"query",
              "description":"To filter interventions on given identity_group_id. This will return interventions associated to any identity in the indentity_group.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"identity_id",
              "in":"query",
              "description":"To filter interventions on given identity_id(s). Can be a single value or an array.",
              "required":false,
              "explode":true,
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"sort",
              "in":"query",
              "description":"To change the criteria chosen to sort the interventions. The value can be “created_at” or “updated_at”.",
              "required":false,
              "schema":{
                "type":"string",
                "enum":[
                  "created_at",
                  "updated_at"
                ]
              }
            },
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllInterventionsResponse"
                  }
                }
              }
            }
          }
        },
        "post":{
          "tags":[
            "Interventions"
          ],
          "summary":"Creating an intervention",
          "operationId":"createIntervention",
          "description":"This method creates a new intervention or reopen it. In case of success it renders the intervention, otherwise, it renders an error (422 HTTP code). This method opens intervention as access token’s user.\n\nAuthorization​: no, but it renders an error if intervention can’t be created or reopened (already opened, etc.).",
          "parameters":[
            {
              "name":"content_id",
              "in":"query",
              "description":"The content to create intervention on (mandatory).",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllInterventionsResponse"
                  }
                }
              }
            },
            "422":{
              "description":"Unprocessable Entity"
            }
          }
        }
      },
      "/interventions/{interventionId}":{
        "get":{
          "tags":[
            "Interventions"
          ],
          "summary":"Getting an intervention from its id",
          "operationId":"getIntervention",
          "description":"This method renders an intervention from given id. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\nAuthorization​: no.",
          "parameters":[
            {
              "name":"interventionId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Intervention"
                  }
                }
              }
            }
          }
        }
      },
      "/interventions/{interventionId}/cancel":{
        "delete":{
          "tags":[
            "Interventions"
          ],
          "summary":"Cancelling an intervention",
          "operationId":"cancelIntervention",
          "description":"This method cancels (destroys) an intervention. It renders intervention itself. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\nCaveats:\n\n* If the intervention is already being canceled, it will return a 409 error.\n* To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n  * Intervention MUST NOT already be closed\n * Intervention MUST NOT have agent replies\n  * Access-Token agent MUST have read access on the source\n\nAuthorization​: no, but it renders an error if intervention can’t be destroyed (see caveats).",
          "parameters":[
            {
              "name":"interventionId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Intervention"
                  }
                }
              }
            }
          }
        }
      },
      "/interventions/{interventionId}/reassign":{
        "put":{
          "tags":[
            "Interventions"
          ],
          "summary":"Reassigning an intervention",
          "operationId":"reassignIntervention",
          "description":"This method updates the user in charge of the intervention\n\nAuthorization​: Only users who can update interventions.",
          "parameters":[
            {
              "name":"interventionId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"user_id",
              "in":"query",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Intervention"
                  }
                }
              }
            }
          }
        }
      },
      "/interventions/{interventionId}/close":{
        "put":{
          "tags":[
            "Interventions"
          ],
          "summary":"Closing an intervention",
          "operationId":"closeIntervention",
          "description":"This method closes an intervention. Caveats:\n\n* If the intervention is already being closed, it will return a 409 error.\n* To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n\n  * Intervention MUST NOT already be closed\n\n  * Intervention MUST have agent replies\n  * Access-Token agent MUST be the owner of the intervention or have the permission to edit permissions\n\n  * Access-Token agent MUST have read access on the source\n\nAuthorization​: no, but it renders an error if intervention can’t be closed (see caveats)",
          "parameters":[
            {
              "name":"interventionId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Intervention"
                  }
                }
              }
            },
            "409":{
              "description":"If the intervention is already being closed, it will return a 409 error."
            }
          }
        }
      },
      "/interventions/{interventionId}/update_categories":{
        "put":{
          "tags":[
            "Interventions"
          ],
          "summary":"Categorizing an intervention",
          "operationId":"categorizeIntervention",
          "description":"This method updates the categories of an intervention. If token’s user does not have “read” on the intervention’s source a 404 HTTP response will be returned.\n\nAuthorization​: no.",
          "parameters":[
            {
              "name":"interventionId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"category_ids[]",
              "in":"query",
              "required":true,
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Intervention"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllInterventionsResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Intervention"
              }
            }
          }
        },
        "Intervention":{
          "required":[
            "id"
          ],
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "source_id":{
              "type":"string"
            },
            "thread_id":{
              "type":"string"
            },
            "content_id":{
              "type":"string"
            },
            "deferred_at":{
              "type":"string",
              "format":"date-time"
            },
            "identity_id":{
              "type":"string"
            },
            "comments_count":{
              "type":"integer"
            },
            "closed":{
              "type":"boolean"
            },
            "closed_at":{
              "type":"string",
              "format":"date-time"
            },
            "custom_fields":{
              "type":"object"
            },
            "category_ids":{
              "type":"array",
              "items":{
                "type":"string"
              }
            },
            "user_id":{
              "type":"string"
            },
            "user_replies_count":{
              "type":"integer"
            },
            "user_reply_in_average":{
              "type":"integer"
            },
            "user_reply_in_average_bh":{
              "type":"integer"
            },
            "user_reply_in_average_count":{
              "type":"integer"
            },
            "first_user_reply_id":{
              "type":"string"
            },
            "first_user_reply_in":{
              "type":"integer"
            },
            "first_user_reply_in_bh":{
              "type":"integer"
            },
            "last_user_reply_in":{
              "type":"integer"
            },
            "last_user_reply_in_bh":{
              "type":"integer"
            },
            "status":{
              "type":"string"
            }
          }
        }
      }
    }
  }