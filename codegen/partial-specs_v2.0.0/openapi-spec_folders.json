{
  "swagger":"2.0",
  "info":{
    "description":"",
    "version":"1.0",
    "title":"Engage Digital API",
    "termsOfService":"https://developer.ringcentral.com"
  },
  "host":"DOMAIN.api.engagement.dimelo.com",
  "basePath":"/1.0",
  "schemes":[
    "https"
  ],
  "tags":[
    {
      "name":"Folders"
    }
  ],
  "paths":{
    "/folders":{
      "get":{
        "tags":[
          "Folders"
        ],
        "summary":"Getting all folders",
        "operationId":"getAllFolders",
        "description":"This method renders folders.",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"offset",
            "type":"integer",
            "format":"int32",
            "in":"query",
            "description":"The record index to start. Default value is 0.",
            "required":false
          },
          {
            "name":"limit",
            "type":"string",
            "format":"int32",
            "in":"query",
            "description":"The max number of records to return. Default value is 30, max value is 150.",
            "required":false
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "schema":{
              "$ref":"#/definitions/GetAllFoldersResponse"
            }
          }
        }
      },
      "post":{
        "tags":[
          "Folders"
        ],
        "summary":"Creating a folder",
        "operationId":"createFolder",
        "description":"This method creates a new folder. In case of success it renders the created folder, otherwise an error (422 HTTP code).",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"label",
            "description":"Folder’s label (mandatory).",
            "in":"query",
            "type":"string",
            "required":false
          },
          {
            "name":"parent_id",
            "description":"ID of the parent folder.",
            "in":"query",
            "type":"string",
            "required":false
          },
          {
            "name":"position",
            "description":"position of the folder. ",
            "in":"query",
            "type":"integer",
            "required":false
          },
          {
            "name":"query",
            "description":"query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”",
            "in":"query",
            "type":"string",
            "required":false
          },
          {
            "name":"render_threads_count",
            "description":"boolean describing display of the number of threads. ",
            "in":"query",
            "type":"boolean",
            "required":false
          },
          {
            "name":"role_restriction[only][]",
            "description":"list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `&role_restriction[only][]=4e5596cdae70f677b5000002`",
            "in":"query",
            "type":"array",
            "required":false,
            "items":{
              "type":"string"
            }
          },
          {
            "name":"team_restriction[only][]",
            "description":"list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".",
            "in":"query",
            "type":"array",
            "required":false,
            "items":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "schema":{
              "$ref":"#/definitions/Folder"
            }
          }
        }
      }
    },
    "/folders/{folderId}":{
      "get":{
        "tags":[
          "Folders"
        ],
        "summary":"Getting a folder from its id",
        "operationId":"getFolder",
        "description":"This method renders a folder from given id.",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"folderId",
            "type":"string",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "schema":{
              "$ref":"#/definitions/Folder"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Folders"
        ],
        "summary":"Deleting a folder",
        "operationId":"deleteFolder",
        "description":"This method destroys an existing folder. It renders the folder itself. It renders a 404 if id is invalid.",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"folderId",
            "type":"string",
            "in":"path",
            "required":true
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "schema":{
              "$ref":"#/definitions/Folder"
            }
          }
        }
      }
    }
  },
  "definitions":{
    "GetAllFoldersResponse":{
      "properties":{
        "count":{
          "type":"integer",
          "format":"int32"
        },
        "limit":{
          "type":"integer",
          "format":"int32"
        },
        "offset":{
          "type":"integer",
          "format":"int32"
        },
        "records":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Folder"
          }
        }
      }
    },
    "Folder":{
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "type":"string"
        },
        "created_at":{
          "type":"string",
          "format":"date-time"
        },
        "updated_at":{
          "type":"string",
          "format":"date-time"
        },
        "label":{
          "type":"string"
        },
        "parent_id":{
          "type":"string"
        },
        "position":{
          "type":"integer"
        },
        "query":{
          "type":"string"
        },
        "render_threads_count":{
          "type":"boolean"
        },
        "role_restriction":{
          "schema":{
            "$ref":"#/definitions/Restriction"
          }
        }
      }
    },
    "Restriction":{
      "properties":{
        "only":{
          "type":"array",
          "items":{
            "type":"string"
          }
        }
      }
    }
  }
}