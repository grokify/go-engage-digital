{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Topologies",
        "description":"This API allows to list, create, activate, read, modify and delete topologies."
      }
    ],
    "paths":{
      "/topologies":{
        "get":{
          "tags":[
            "Topologies"
          ],
          "summary":"Getting all topologies",
          "operationId":"getAllTopologies",
          "description":"This method renders all topologies ordered by name (in alphabetical order).\n\nAuthorization​: only users that have the right to manage topologies",
          "parameters":[
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllTopologiesResponse"
                  }
                }
              }
            }
          }
        },
        "post":{
          "tags":[
            "Topologies"
          ],
          "summary":"Creating a topology",
          "operationId":"createTopology",
          "description":"This method creates a topology. In case of success it renders the topology, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that are techteam.",
          "parameters":[
            {
              "name":"name",
              "description":"The name of the topology.",
              "in":"query",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"json_config",
              "description":"The json describing the topology.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Topology"
                  }
                }
              }
            },
            "403":{
              "description":"Forbidden"
            }
          }
        }
      },
      "/topologies/{topologyId}":{
        "get":{
          "tags":[
            "Topologies"
          ],
          "summary":"Getting a topology from its id",
          "operationId":"getTopology",
          "description":"This method renders a topology from given id.\n\nAuthorization​: only users that have the right to manage topologies.",
          "parameters":[
            {
              "name":"topologyId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Topology"
                  }
                }
              }
            }
          }
        },
        "put":{
          "tags":[
            "Topologies"
          ],
          "summary":"Updating a topology",
          "operationId":"updateTopology",
          "description":"This method updates an existing topology from given attributes and renders it in case of success.\n\nAuthorization​: only users that have the right to manage topologies.",
          "parameters":[
            {
              "name":"topologyId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"name",
              "description":"The name of the topology.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"json_config",
              "description":"The json describing the topology.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Topology"
                  }
                }
              }
            }
          }
        },
        "delete":{
          "tags":[
            "Tags"
          ],
          "summary":"Deleting a topology",
          "operationId":"deleteTopology",
          "description":"This method destroys an existing topology. It renders topology itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that are techteam.",
          "parameters":[
            {
              "name":"topologyId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Topology"
                  }
                }
              }
            }
          }
        }
      },
      "/toplogies/{topologyId}/activate":{
        "get":{
          "tags":[
            "Topologies"
          ],
          "summary":"Activating a topology",
          "operationId":"activateTopology",
          "description":"This method activates an existing topology from given attributes and renders it in case of success.\n\nAuthorization​: only users that are techteam.",
          "parameters":[
            {
              "name":"topologyId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Topology"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllTopologiesResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Topology"
              }
            }
          }
        },
        "Topology":{
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "name":{
              "type":"string"
            },
            "config":{
              "$ref":"#/components/schemas/TopologyConfig"
            }
          }
        },
        "TopologyConfig":{
          "properties":{
            "inputs":{
              "$ref":"#/components/schemas/TopologyConfigInputs"
            },
            "steps":{
                "type":"array",
                "items":{
                  "$ref":"#/components/schemas/TopologyStep"
                }
            }
          }
        },
        "TopologyConfigInputs":{
          "properties":{
            "inbound":{
              "type":"string"
            },
            "transfered":{
              "type":"string"
            }
          }
        },
        "TopologyStep":{
          "properties":{
            "links":{
              "$ref":"#/components/schemas/TopologyStepLinks"
            },
            "_type":{
              "type":"string"
            },
            "label":{
              "type":"string"
            }
          }
        },
        "TopologyStepLinks":{
          "properties":{
            "async":{
              "type":"string"
            },
            "realtime":{
              "type":"string"
            },
            "failure":{
                "type":"string"
              },
              "reroute":{
                "type":"string"
              }
          }
        }
      }
    }
  }