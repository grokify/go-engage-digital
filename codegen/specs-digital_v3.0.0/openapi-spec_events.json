{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Events"
      }
    ],
    "paths":{
      "/events":{
        "get":{
          "tags":[
            "Events"
          ],
          "summary":"Getting all events",
          "operationId":"getAllEvents",
          "description":"This method renders events ordered by creation date (descending).\n\nAuthorization​: Only users whose role can search event permission.",
          "parameters":[
            {
              "name":"q",
              "in":"query",
              "description":"To filter events on given query. Query works exactly like threads query but only have those keywords: content, content_thread, name_in, created_before, created_after, user. Order can be created_at.desc (default) or created_at.asc. e.g. q=name_in:\"content.replied\"%20content_thread:\"7f946431b6eebffafae642cc\"%20created_after:\"2014-03-20\"%20user:\"4ee91f197aa58d01b500000f\"%20order:\"created_at.asc\"\n* DateTime parameters should be ISO-8601\n* you can specify multiple value for a given keyword: q=name_in:’content.replied’&name_in:’content.ignored’\nPlease refer to ​Search & filtering parameters​ for more details.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllEventsResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/events/{eventId}":{
        "get":{
          "tags":[
            "Events"
          ],
          "summary":"Getting an event from its id",
          "operationId":"getEvent",
          "description":"This method renders an event from given id. If token’s user role does not have “search event” permission a 404 HTTP response will be returned.\n\nAuthorization​: Only users who’s role can search event permission.",
          "parameters":[
            {
              "name":"eventId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllEventsResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Event"
              }
            }
          }
        },
        "Event":{
          "required":[
            "id"
          ],
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "name":{
              "type":"string"
            },
            "user_id":{
              "type":"string"
            },
            "extra_infos":{
              "$ref":"#/components/schemas/EventExtraInfo"
            }
          }
        },
        "EventExtraInfo":{
          "description":"attributes in extra_infos are optional and unspecified/not guaranteed, don’t rely on it for critical tasks, this is provided as information only",
          "properties":{
            "authentication_strategy":{
              "type":"string"
            },
            "business/time_sheet_id":{
              "type":"string"
            },
            "category_ids":{
              "type":"array",
              "items":{
                "type":"string"
              }
            },
            "closed_automatically":{
              "type":"string"
            },
            "content_id":{
              "type":"string"
            },
            "content_source_id":{
              "type":"string"
            },
            "content_thread_id":{
              "type":"string"
            },
            "deferred_duration":{
              "type":"string"
            },
            "deletions":{
              "type":"object"
            },
            "foreign_id":{
              "description":"can be null",
              "type":"string"
            },
            "intervention_id":{
              "type":"string"
            },
            "request_ip":{
              "type":"string"
            },
            "task_id":{
              "type":"string"
            },
            "user_id":{
              "type":"string"
            }
          }
        }
      }
    }
  }