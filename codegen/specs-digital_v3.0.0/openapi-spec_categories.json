{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"Categories"
      }
    ],
    "paths":{
      "/categories":{
        "get":{
          "tags":[
            "Categories"
          ],
          "summary":"Getting all categories",
          "operationId":"getAllCategories",
          "description":"This method renders categories ordered by creation date (ascending).",
          "parameters":[
            {
              "name":"parent_id",
              "in":"query",
              "description":"To filter categories on given category parent id.",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllCategoriesResponse"
                  }
                }
              }
            }
          }
        },
        "post":{
          "tags":[
            "Categories"
          ],
          "summary":"Creating a category",
          "operationId":"createCategory",
          "description":"This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\nNote: The fields ​`mandatory`,​ `​multiple`,​ ​`post_qualification​`, `s​ource_ids`​ and `u​nselectable​` are accounted for only if the Category has no parent.\n\nAuthorization​: only users that can manage teams.",
          "parameters":[
            {
              "name":"name",
              "in":"query",
              "required":false,
              "description":"Category name.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"parent_id",
              "in":"query",
              "required":false,
              "description":"ID of parent category.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"color",
              "in":"query",
              "required":false,
              "description":"displayed color for the category, see Category colors. ",
              "schema":{
                "type":"integer",
                "enum":[
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6
                ]
              }
            },
            {
              "name":"mandatory",
              "in":"query",
              "required":false,
              "description":"mandatory categorization (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"multiple",
              "in":"query",
              "required":false,
              "description":"allow to assign multiple child categories (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"post_qualification",
              "in":"query",
              "required":false,
              "description":"post qualification (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"unselectable",
              "in":"query",
              "required":false,
              "description":"root category is unselectable (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"source_ids[]",
              "in":"query",
              "required":false,
              "description":"List of source id.",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "/categories/{categoryId}":{
        "get":{
          "tags":[
            "Categories"
          ],
          "summary":"Getting a category from its id",
          "operationId":"getCategory",
          "description":"This method renders a category from given id.",
          "parameters":[
            {
              "name":"categoryId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "put":{
          "tags":[
            "Categories"
          ],
          "summary":"Updating a category",
          "operationId":"updateCategory",
          "description":"This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\nNote: The fields ​`mandatory`,​ ​`multiple`,​ ​`post_qualification​`, `s​ource_ids​` and `u​nselectable​` are accounted for only if the Category has no parent.\n\nAuthorization​: only users that can manage teams.",
          "parameters":[
            {
              "name":"categoryId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"name",
              "in":"query",
              "required":false,
              "description":"Category name.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"parent_id",
              "in":"query",
              "required":false,
              "description":"ID of parent category.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"color",
              "in":"query",
              "required":false,
              "description":"displayed color for the category, see Category colors. ",
              "schema":{
                "type":"integer"
              }
            },
            {
              "name":"mandatory",
              "in":"query",
              "required":false,
              "description":"mandatory categorization (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"multiple",
              "in":"query",
              "required":false,
              "description":"allow to assign multiple child categories (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"post_qualification",
              "in":"query",
              "required":false,
              "description":"post qualification (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"unselectable",
              "in":"query",
              "required":false,
              "description":"root category is unselectable (Boolean).",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"source_ids[]",
              "in":"query",
              "required":false,
              "description":"List of source id.",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "delete":{
          "tags":[
            "Categories"
          ],
          "summary":"Deleting a category",
          "operationId":"deleteCategory",
          "description":"This method destroys an existing category. It renders the category itself. It renders a 404 if id is invalid.",
          "parameters":[
            {
              "name":"categoryId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"take_over_category_id",
              "description":"ID of a category to recategorize (optional).",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllCategoriesResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/Category"
              }
            }
          }
        },
        "Category":{
          "required":[
            "id"
          ],
          "properties":{
            "id":{
              "type":"string"
            },
            "parent_id":{
              "type":"string"
            },
            "name":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "color":{
              "type":"integer"
            },
            "mandatory":{
              "type":"boolean"
            },
            "multiple":{
              "type":"boolean"
            },
            "post_qualification":{
              "type":"boolean"
            },
            "source_ids":{
              "type":"array",
              "items":{
                "type":"string"
              }
            },
            "unselectable":{
              "type":"boolean"
            }
          }
        }
      }
    }
  }