{
  "openapi":"3.0.0",
  "info":{
    "description":"",
    "version":"1.0",
    "title":"Engage Digital API",
    "termsOfService":"https://developer.ringcentral.com"
  },
  "tags":[
    {
      "name":"Webhooks"
    }
  ],
  "paths":{
    "/webhooks":{
      "get":{
        "tags":[
          "Webhooks"
        ],
        "summary":"Getting all webhooks",
        "operationId":"getAllWebhooks",
        "description":"This method renders webhooks ordered by active and staging_use (descending).\n\nAuthorization​: users having manage_api_access_tokens permission can see all webhooks / users don’t having the manage_api_access_tokens permission can see only the webhooks belonging to access token created by them.",
        "parameters":[
          {
            "name":"access_token",
            "in":"query",
            "description":"Access token.",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"offset",
            "in":"query",
            "description":"The record index to start. Default value is 0.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          },
          {
            "name":"limit",
            "in":"query",
            "description":"The max number of records to return. Default value is 30, max value is 150.",
            "required":false,
            "schema":{
              "type":"integer",
              "format":"int32"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/GetAllWebhooksResponse"
                }
              }
            }
          }
        }
      },
      "post":{
        "tags":[
          "Webhooks"
        ],
        "summary":"Creating a webhook",
        "operationId":"createWebhook",
        "description":"This method creates a webhook. In case of success it renders the webhook, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token.",
        "parameters":[
          {
            "name":"access_token",
            "in":"query",
            "description":"Access token.",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"active",
            "in":"query",
            "required":false,
            "description":"true or false, this field is used to enable/disable a webhook.",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "name":"label",
            "in":"query",
            "required":true,
            "description":"The label of the webhook.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"staging_use",
            "in":"query",
            "required":false,
            "description":"true or false, this field is used to determine if a webhook will be run in staging",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "name":"url",
            "in":"query",
            "required":true,
            "description":"The url of a webhook. This is used to determine the endpoint of your webhook, where",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"verify_token",
            "in":"query",
            "required":false,
            "description":"The token used in your webhook.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"secret",
            "in":"query",
            "required":false,
            "description":"The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"registered_events[]",
            "in":"query",
            "required":true,
            "description":"An array containing all the events that your webhook wants to subscribe.",
            "schema":{
              "type":"array",
              "items":{
                "type":"string",
                "enum":[
                  "api_access_token.created",
                  "api_access_token.destroyed",
                  "api_access_token.updated",
                  "automatic_exports_task.created",
                  "automatic_exports_task.destroyed",
                  "automatic_exports_task.failed",
                  "automatic_exports_task.succeed",
                  "automatic_exports_task.updated",
                  "category.created",
                  "category.destroyed",
                  "category.updated",
                  "community.created",
                  "community.destroyed",
                  "community.updated",
                  "content.admin_stamped",
                  "content.approved",
                  "content.author_blocked",
                  "content.author_stamped",
                  "content.author_unblocked",
                  "content.auto_categorization_infirmed",
                  "content.auto_categorization_not_precise",
                  "content.auto_categorized",
                  "content.auto_ignored",
                  "content.categorized",
                  "content.destroyed",
                  "content.discussion_initiated",
                  "content.discussion_planned",
                  "content.ice_nth_content_ignored",
                  "content.ignored",
                  "content.imported",
                  "content.liked",
                  "content.moderated_ban",
                  "content.moderated_modif",
                  "content.moderated_nok",
                  "content.moderated_ok",
                  "content.planned_discussion_synchronized",
                  "content.published",
                  "content.recategorized",
                  "content.replied",
                  "content.reply_assistant_used",
                  "content.retried_synchronization",
                  "content.retweeted",
                  "content.source_changed",
                  "content.stared",
                  "content.thread_closed",
                  "content.thread_opened",
                  "content.unliked",
                  "content.unpublished",
                  "content.unstamped",
                  "content.unstared",
                  "content.updated",
                  "content_source.created",
                  "content_source.destroyed",
                  "content_source.updated",
                  "content_thread.categorized",
                  "content_thread.destroyed",
                  "content_thread.recategorized",
                  "custom_field.created",
                  "custom_field.destroyed",
                  "custom_field.updated",
                  "expired_data_purge.deleted",
                  "extension.created",
                  "extension.destroyed",
                  "extension.updated",
                  "folder.created",
                  "folder.destroyed",
                  "folder.updated",
                  "identity.followed",
                  "identity.unfollowed",
                  "identity.updated",
                  "intervention.assigned",
                  "intervention.canceled",
                  "intervention.closed",
                  "intervention.deferred",
                  "intervention.opened",
                  "intervention.recategorized",
                  "intervention.reopened",
                  "intervention.updated",
                  "intervention.user_updated",
                  "intervention_comment.created",
                  "intervention_comment.destroyed",
                  "reply_assistant_knowledge_base_entry.created",
                  "reply_assistant_knowledge_base_entry.destroyed",
                  "reply_assistant_knowledge_base_entry.updated",
                  "reply_assistant_knowledge_base_version.created",
                  "reply_assistant_knowledge_base_version.destroyed",
                  "reply_assistant_knowledge_base_version.updated",
                  "reply_assistant_sentence_entry.created",
                  "reply_assistant_sentence_entry.destroyed",
                  "reply_assistant_sentence_entry.updated",
                  "reply_assistant_sentence_version.created",
                  "reply_assistant_sentence_version.destroyed",
                  "reply_assistant_sentence_version.updated",
                  "reply_assistant_version_permalink.created",
                  "reply_assistant_version_permalink.destroyed",
                  "reply_assistant_version_permalink.updated",
                  "role.created",
                  "role.destroyed",
                  "role.updated",
                  "security.updated",
                  "session.created",
                  "session.destroyed",
                  "settings.updated",
                  "survey.created",
                  "survey.destroyed",
                  "survey.updated",
                  "tag.created",
                  "tag.destroyed",
                  "tag.updated",
                  "team.created",
                  "team.destroyed",
                  "team.updated",
                  "user.created",
                  "user.destroyed",
                  "user.disconnected",
                  "user.impersonated",
                  "user.invited",
                  "user.notifications_updated",
                  "user.updated"
                ]
              }
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}":{
      "get":{
        "tags":[
          "Webhooks"
        ],
        "summary":"Getting a webhook from its id",
        "operationId":"getWebhook",
        "description":"This method renders a webhook from given id.\n\nAuthorization​: users having manage_api_access_tokens permission can see any webhook / users don’t having the `manage_api_access_tokens` permission can see only the webhook in case the webhook is associated to an access token created by them.",
        "parameters":[
          {
            "name":"webhookId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"access_token",
            "in":"query",
            "description":"Access token.",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      },
      "put":{
        "tags":[
          "Webhooks"
        ],
        "summary":"Updating a webhook",
        "operationId":"updateWebhook",
        "description":"This method updates an existing webhook from given attributes and renders it in case of success.\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re updating.",
        "parameters":[
          {
            "name":"webhookId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"access_token",
            "in":"query",
            "description":"Access token.",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"active",
            "in":"query",
            "required":false,
            "description":"true or false, this field is used to enable/disable a webhook.",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "name":"label",
            "in":"query",
            "required":false,
            "description":"The label of the webhook.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"staging_use",
            "in":"query",
            "required":false,
            "description":"true or false, this field is used to determine if a webhook will be run in staging",
            "schema":{
              "type":"boolean"
            }
          },
          {
            "name":"url",
            "in":"query",
            "required":false,
            "description":"The url of a webhook. This is used to determine the endpoint of your webhook, where",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"verify_token",
            "in":"query",
            "required":false,
            "description":"The token used in your webhook.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"secret",
            "in":"query",
            "required":false,
            "description":"The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"registered_events[]",
            "in":"query",
            "required":false,
            "description":"An array containing all the events that your webhook wants to subscribe.",
            "schema":{
              "type":"array",
              "items":{
                "type":"string"
              }
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Webhooks"
        ],
        "summary":"Deleting a webhook",
        "operationId":"deleteWebhook",
        "description":"This method destroys an existing webhook. It renders webhook itself. It renders a 404 if id is invalid.\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re deleting.",
        "parameters":[
          {
            "name":"webhookId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"access_token",
            "in":"query",
            "description":"Access token.",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Success",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers":[
    {
      "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
    }
  ],
  "components":{
    "schemas":{
      "GetAllWebhooksResponse":{
        "properties":{
          "count":{
            "type":"integer",
            "format":"int32"
          },
          "limit":{
            "type":"integer",
            "format":"int32"
          },
          "offset":{
            "type":"integer",
            "format":"int32"
          },
          "records":{
            "type":"array",
            "items":{
              "$ref":"#/components/schemas/Webhook"
            }
          }
        }
      },
      "Webhook":{
        "required":[
          "id"
        ],
        "properties":{
          "id":{
            "type":"string"
          },
          "active":{
            "type":"boolean"
          },
          "staging_use":{
            "type":"boolean"
          },
          "url":{
            "type":"string"
          },
          "verify_token":{
            "type":"string"
          },
          "registered_events":{
            "type":"array",
            "items":{
              "type":"string"
            }
          },
          "api_access_token":{
            "$ref":"#/components/schemas/WebhookAccessToken"
          }
        }
      },
      "WebhookAccessToken":{
        "required":[
          "id"
        ],
        "properties":{
          "id":{
            "type":"string"
          },
          "created_at":{
            "type":"string",
            "format":"date-time"
          },
          "updated_at":{
            "type":"string",
            "format":"date-time"
          }
        }
      }
    }
  }
}