{
    "openapi":"3.0.0",
    "info":{
      "description":"",
      "version":"1.0",
      "title":"Engage Digital API",
      "termsOfService":"https://developer.ringcentral.com"
    },
    "tags":[
      {
        "name":"CustomFields"
      }
    ],
    "paths":{
      "/custom_fields":{
        "get":{
          "tags":[
            "CustomFields"
          ],
          "summary":"Getting all custom fields",
          "operationId":"getAllCustomFields",
          "description":"This method renders custom fields ordered by position (ascending).\n\nAuthorization​: only users that can see custom fields in administration section.",
          "parameters":[
            {
              "name":"offset",
              "in":"query",
              "description":"The record index to start. Default value is 0.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            },
            {
              "name":"limit",
              "in":"query",
              "description":"The max number of records to return. Default value is 30, max value is 150.",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/GetAllCustomFieldsResponse"
                  }
                }
              }
            }
          }
        },
        "post":{
          "tags":[
            "CustomFields"
          ],
          "summary":"Creating a custom field",
          "operationId":"createCustomField",
          "description":"This method creates a custom field. In case of success it renders the custom field, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can create custom fields.",
          "parameters":[
            {
              "name":"associated_type_name",
              "in":"query",
              "required":true,
              "description":"The associated type of custom field. It can be IdentityGroup or Intervention.",
              "schema":{
                "type":"string",
                "enum":["IdentityGroup","Intervention"]
              }
            },
            {
              "name":"label",
              "in":"query",
              "required":true,
              "description":"The label of the custom field.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"key",
              "in":"query",
              "required":false,
              "description":"The key of the custom field (example: customer_id). This is used to determine how it is stored on identity groups.",
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"type",
              "in":"query",
              "required":false,
              "description":"The type of the custom field. It can be string, boolean, text, integer, float, single_choice,",
              "schema":{
                "type":"string",
                "enum":[
                  "string",
                  "boolean",
                  "text",
                  "integer",
                  "float",
                  "single_choice",
                  "multiple_choice"
                ]
              }
            },
            {
              "name":"choices",
              "in":"query",
              "required":false,
              "explode":true,
              "description":"A list of choices to be for single_choice, or multiple_choice types. This must be given",
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"multiple",
              "in":"query",
              "required":false,
              "description":"true or false, this as no effect on single_choice, multiple_choice or boolean types",
              "schema":{
                "type":"boolean"
              }
            },
            {
              "name":"position",
              "in":"query",
              "required":false,
              "description":"an integer that indicates custom field’s position between others (default: -1).",
              "schema":{
                "type":"integer",
                "default":-1
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        }
      },
      "/custom_fields/{customFieldId}":{
        "get":{
          "tags":[
            "CustomFields"
          ],
          "summary":"Getting a custom field from its id",
          "operationId":"getCustomField",
          "description":"This method renders a custom field from given id.\n\nAuthorization​: only users that can see custom fields in administration section.",
          "parameters":[
            {
              "name":"customFieldId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        },
        "put":{
          "tags":[
            "CustomFields"
          ],
          "summary":"Updating a custom field",
          "operationId":"updateCustomField",
          "description":"This method updates an existing custom field from given attributes and renders it in case of success.\n\nAuthorization​: only users that are able to update custom fields.",
          "parameters":[
            {
              "name":"customFieldId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"label",
              "description":"Custom field’s label.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"string"
              }
            },
            {
              "name":"choices",
              "in":"query",
              "required":false,
              "explode":true,
              "schema":{
                "type":"array",
                "items":{
                  "type":"string"
                }
              }
            },
            {
              "name":"position",
              "description":"Custom field’s position.",
              "in":"query",
              "required":false,
              "schema":{
                "type":"integer",
                "format":"int32"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        },
        "delete":{
          "tags":[
            "CustomFields"
          ],
          "summary":"Deleting a custom field",
          "operationId":"deleteCustomField",
          "description":"This method destroys an existing custom field. It renders custom field itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that are able to destroy custom fields..",
          "parameters":[
            {
              "name":"customFieldId",
              "in":"path",
              "required":true,
              "schema":{
                "type":"string"
              }
            }
          ],
          "responses":{
            "200":{
              "description":"Success",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers":[
      {
        "url":"https://DOMAIN.api.engagement.dimelo.com/1.0"
      }
    ],
    "components":{
      "schemas":{
        "GetAllCustomFieldsResponse":{
          "properties":{
            "count":{
              "type":"integer",
              "format":"int32"
            },
            "limit":{
              "type":"integer",
              "format":"int32"
            },
            "offset":{
              "type":"integer",
              "format":"int32"
            },
            "records":{
              "type":"array",
              "items":{
                "$ref":"#/components/schemas/CustomField"
              }
            }
          }
        },
        "CustomField":{
          "required":[
            "id",
            "label"
          ],
          "properties":{
            "id":{
              "type":"string"
            },
            "created_at":{
              "type":"string",
              "format":"date-time"
            },
            "updated_at":{
              "type":"string",
              "format":"date-time"
            },
            "label":{
              "type":"string"
            },
            "associated_type_name":{
              "type":"string"
            },
            "key":{
              "type":"string"
            },
            "multiple":{
              "type":"boolean"
            },
            "position":{
              "type":"integer"
            },
            "type":{
              "type":"string"
            }
          }
        }
      }
    }
  }