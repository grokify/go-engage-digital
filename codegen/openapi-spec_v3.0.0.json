{"components":{"schemas":{"Community":{"properties":{"active":{"type":"boolean"},"created_at":{"format":"date-time","type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"updated_at":{"format":"date-time","type":"string"}}},"Folder":{"properties":{"created_at":{"format":"date-time","type":"string"},"id":{"type":"string"},"label":{"type":"string"},"parent_id":{"type":"string"},"position":{"type":"integer"},"query":{"type":"string"},"render_threads_count":{"type":"boolean"},"role_restriction":{"$ref":"#/components/schemas/Restriction"},"updated_at":{"format":"date-time","type":"string"}},"required":["id"]},"GetAllCommunitiesResponse":{"properties":{"count":{"format":"int32","type":"integer"},"limit":{"format":"int32","type":"integer"},"offset":{"format":"int32","type":"integer"},"records":{"items":{"$ref":"#/components/schemas/Community"},"type":"array"}}},"GetAllFoldersResponse":{"properties":{"count":{"format":"int32","type":"integer"},"limit":{"format":"int32","type":"integer"},"offset":{"format":"int32","type":"integer"},"records":{"items":{"$ref":"#/components/schemas/Folder"},"type":"array"}}},"GetAllSourcesResponse":{"properties":{"count":{"format":"int32","type":"integer"},"limit":{"format":"int32","type":"integer"},"offset":{"format":"int32","type":"integer"},"records":{"items":{"$ref":"#/components/schemas/Source"},"type":"array"}}},"GetAllTeamsResponse":{"properties":{"count":{"format":"int32","type":"integer"},"limit":{"format":"int32","type":"integer"},"offset":{"format":"int32","type":"integer"},"records":{"items":{"$ref":"#/components/schemas/Team"},"type":"array"}}},"GetAllUsersResponse":{"properties":{"count":{"format":"int32","type":"integer"},"limit":{"format":"int32","type":"integer"},"offset":{"format":"int32","type":"integer"},"records":{"items":{"$ref":"#/components/schemas/User"},"type":"array"}}},"Locale":{"properties":{"code":{"type":"string"},"interface":{"type":"boolean"},"name":{"type":"string"}}},"Restriction":{"properties":{"only":{"items":{"type":"string"},"type":"array"}}},"Source":{"properties":{"active":{"description":"Activate/deactivate the source","type":"boolean"},"auto_detect_content_language":{"description":"Auto-detect content language (Boolean)","type":"boolean"},"channel_id":{"type":"string"},"color":{"description":"Color of the icon: Default: 0 Blue: 1 Green: 2 Turquoise: 3 Purple: 4 Yellow: 5 Orange: 6 Red: 7 Asphalt: 8 Grey: 9","format":"int32","type":"integer"},"community_id":{"type":"string"},"content_archiving":{"description":"Automatic archiving of old contents (Boolean)","type":"boolean"},"content_archiving_period":{"description":"Archive contents older than (seconds)","format":"int64","type":"integer"},"content_languages":{"items":{"type":"string"},"type":"array"},"created_at":{"format":"date-time","type":"string"},"default_category_ids":{"description":"Default categories","items":{"type":"string"},"type":"array"},"default_content_language":{"description":"Default content language","type":"string"},"error_message":{"type":"string"},"hidden_from_stats":{"description":"Hide from statistics","type":"boolean"},"id":{"type":"string"},"intervention_messages_boost":{"description":"Priority boost of messages with intervention","format":"int32","type":"integer"},"name":{"description":"Source name","type":"string"},"sla_expired_strategy":{"description":"SLA expired strategy (\"max\", \"half\" or \"base\")","enum":["max","half","base"],"type":"string"},"sla_response":{"description":"Response time (seconds)","format":"int32","type":"integer"},"status":{"type":"string"},"time_sheet_ids":{"items":{"type":"string"},"type":"array"},"transferred_tasks_boost":{"description":"Priority boost of transferred tasks","format":"int32","type":"integer"},"type":{"type":"string"},"updated_at":{"format":"date-time","type":"string"},"user_thread_default_category_ids":{"description":"Default categories (agent messages)","items":{"type":"string"},"type":"array"}}},"Team":{"properties":{"created_at":{"format":"date-time","type":"string"},"id":{"type":"string"},"leader_ids":{"items":{"type":"string"},"type":"array"},"name":{"type":"string"},"updated_at":{"format":"date-time","type":"string"},"user_ids":{"items":{"type":"string"},"type":"array"}},"required":["id"]},"Timezone":{"properties":{"name":{"format":"string"},"utc_offset":{"format":"integer"}}},"User":{"properties":{"category_ids":{"items":{"type":"string"},"type":"array"},"created_at":{"format":"date-time","type":"string"},"email":{"type":"string"},"enabled":{"type":"boolean"},"external_id":{"type":"string"},"firstname":{"type":"string"},"gender":{"type":"string"},"id":{"type":"string"},"identity_ids":{"items":{"type":"string"},"type":"array"},"invitation_pending":{"type":"boolean"},"lastname":{"type":"string"},"locale":{"type":"string"},"nickname":{"type":"string"},"rc_user_id":{"type":"string"},"role_id":{"type":"string"},"spoken_languages":{"items":{"type":"string"},"type":"array"},"team_ids":{"items":{"type":"string"},"type":"array"},"timezone":{"type":"string"},"updated_at":{"format":"date-time","type":"string"}},"required":["id"]}}},"info":{"description":"","termsOfService":"https://developer.ringcentral.com","title":"Engage Digital API","version":"1.0"},"openapi":"3.0.0","paths":{"/communities":{"get":{"description":"This method renders communities ordered by creation date (ascending).","operationId":"getAllCommunities","parameters":[{"description":"The record index to start. Default value is 0.","in":"query","name":"offset","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"The max number of records to return. Default value is 30, max value is 150.","in":"query","name":"limit","required":false,"schema":{"format":"int32","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllCommunitiesResponse"}}},"description":"Success"}},"summary":"Getting all communities","tags":["Communities"]}},"/communities/{communityId}":{"get":{"description":"This method renders a community from given id.","operationId":"getCommunity","parameters":[{"in":"path","name":"communityId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Community"}}},"description":"Success"}},"summary":"Getting a community from its id","tags":["Communities"]}},"/content_sources":{"get":{"description":"This method renders sources ordered by creation date (ascending).","operationId":"getAllSources","parameters":[{"description":"The record index to start. Default value is 0.","in":"query","name":"offset","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"The max number of records to return. Default value is 30, max value is 150.","in":"query","name":"limit","required":false,"schema":{"format":"int32","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllSourcesResponse"}}},"description":"Success"}},"summary":"Getting all sources","tags":["Sources"]}},"/content_sources/{sourceId}":{"get":{"description":"This method renders a source from given id.","operationId":"getSource","parameters":[{"in":"path","name":"sourceId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Source"}}},"description":"Success"}},"summary":"Getting a source from its id","tags":["Sources"]}},"/folders":{"get":{"description":"This method renders folders.","operationId":"getAllFolders","parameters":[{"description":"The record index to start. Default value is 0.","in":"query","name":"offset","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"The max number of records to return. Default value is 30, max value is 150.","in":"query","name":"limit","required":false,"schema":{"format":"int32","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllFoldersResponse"}}},"description":"Success"}},"summary":"Getting all folders","tags":["Folders"]},"post":{"description":"This method creates a new folder. In case of success it renders the created folder, otherwise an error (422 HTTP code).","operationId":"createFolder","parameters":[{"description":"Folder’s label (mandatory).","in":"query","name":"label","required":false,"schema":{"type":"string"}},{"description":"ID of the parent folder.","in":"query","name":"parent_id","required":false,"schema":{"type":"string"}},{"description":"position of the folder. ","in":"query","name":"position","required":false,"schema":{"type":"integer"}},{"description":"query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”","in":"query","name":"query","required":false,"schema":{"type":"string"}},{"description":"boolean describing display of the number of threads. ","in":"query","name":"render_threads_count","required":false,"schema":{"type":"boolean"}},{"description":"list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`","in":"query","name":"role_restriction[only][]","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".","in":"query","name":"team_restriction[only][]","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Folder"}}},"description":"Success"}},"summary":"Creating a folder","tags":["Folders"]}},"/folders/{folderId}":{"delete":{"description":"This method destroys an existing folder. It renders the folder itself. It renders a 404 if id is invalid.","operationId":"deleteFolder","parameters":[{"in":"path","name":"folderId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Folder"}}},"description":"Success"}},"summary":"Deleting a folder","tags":["Folders"]},"get":{"description":"This method renders a folder from given id.","operationId":"getFolder","parameters":[{"in":"path","name":"folderId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Folder"}}},"description":"Success"}},"summary":"Getting a folder from its id","tags":["Folders"]},"put":{"description":"This method updates an existing folder from given attributes and renders it in case of success.","operationId":"updateFolder","parameters":[{"in":"path","name":"folderId","required":true,"schema":{"type":"string"}},{"description":"Folder’s label (mandatory).","in":"query","name":"label","required":false,"schema":{"type":"string"}},{"description":"ID of the parent folder.","in":"query","name":"parent_id","required":false,"schema":{"type":"string"}},{"description":"position of the folder. ","in":"query","name":"position","required":false,"schema":{"type":"integer"}},{"description":"query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”","in":"query","name":"query","required":false,"schema":{"type":"string"}},{"description":"boolean describing display of the number of threads. ","in":"query","name":"render_threads_count","required":false,"schema":{"type":"boolean"}},{"description":"list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`","in":"query","name":"role_restriction[only][]","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".","in":"query","name":"team_restriction[only][]","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Folder"}}},"description":"Success"}},"summary":"Updating a folder","tags":["Folders"]}},"/locales":{"get":{"description":"This method renders all available locales.","operationId":"getAllLocales","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Locale"},"type":"array"}}},"description":"List of all locales"}},"summary":"Getting all locales","tags":["Locales"]}},"/teams":{"get":{"description":"This method renders teams ordered by creation date (ascending).","operationId":"getAllTeams","parameters":[{"description":"The record index to start. Default value is 0.","in":"query","name":"offset","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"The max number of records to return. Default value is 30, max value is 150.","in":"query","name":"limit","required":false,"schema":{"format":"int32","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllTeamsResponse"}}},"description":"Success"}},"summary":"Getting all teams","tags":["Teams"]},"post":{"description":"This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).","operationId":"createTeam","parameters":[{"description":"Team name.","in":"query","name":"name","required":false,"schema":{"type":"string"}},{"description":"List of user id as leaders","explode":true,"in":"query","name":"leader_ids[]","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of user id as team members.","explode":true,"in":"query","name":"user_ids[]","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}},"description":"Success"}},"summary":"Creating a team","tags":["Teams"]}},"/teams/{teamId}":{"delete":{"description":"This method destroys an existing team. It renders the team itself. It renders a 404 if id is invalid.","operationId":"deleteTeam","parameters":[{"in":"path","name":"teamId","required":true,"schema":{"type":"string"}},{"description":"ID of a category to recategorize (optional).","in":"query","name":"take_over_category_id","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}},"description":"Success"}},"summary":"Deleting a team","tags":["Teams"]},"get":{"description":"This method renders a team from given id.","operationId":"getTeam","parameters":[{"in":"path","name":"teamId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}},"description":"Success"}},"summary":"Getting a team from its id","tags":["Teams"]},"put":{"description":"This method updates an existing team from given attributes and renders it in case of success.","operationId":"updateTeam","parameters":[{"in":"path","name":"teamId","required":true,"schema":{"type":"string"}},{"description":"Team name.","in":"query","name":"name","required":false,"schema":{"type":"string"}},{"description":"List of user id as leaders","explode":true,"in":"query","name":"leader_ids[]","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of user id as team members.","explode":true,"in":"query","name":"user_ids[]","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}}},"description":"Success"}},"summary":"Updating a team","tags":["Teams"]}},"/timezones":{"get":{"description":"This method renders all available timezones.","operationId":"getAllTimezones","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Timezone"},"type":"array"}}},"description":"List of all timezones"}},"summary":"Getting all timezones","tags":["Timezones"]}},"/users":{"get":{"description":"This method renders users ordered by creation date (descending).\n\nAuthorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the users belonging to at least one of the teams he’s the leader of will be returned.","operationId":"getAllUsers","parameters":[{"description":"To filter users on given email.","in":"query","name":"email","required":false,"schema":{"type":"string"}},{"description":"To filter users on given category id.","in":"query","name":"category_id","required":false,"schema":{"type":"string"}},{"description":"To filter users on given identity id.","in":"query","name":"identity_id","required":false,"schema":{"type":"string"}},{"description":"To filter users on given external id.","in":"query","name":"external_id","required":false,"schema":{"type":"string"}},{"description":"To filter users on given role id.","in":"query","name":"role_id","required":false,"schema":{"type":"string"}},{"description":"To filter users on given team id.","in":"query","name":"team_id","required":false,"schema":{"type":"string"}},{"description":"The record index to start. Default value is 0.","in":"query","name":"offset","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"The max number of records to return. Default value is 30, max value is 150.","in":"query","name":"limit","required":false,"schema":{"format":"int32","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAllUsersResponse"}}},"description":"Success"}},"summary":"Getting all users","tags":["Users"]}},"/users/{userId}":{"delete":{"description":"This method deletes the given user. In case of success it renders the deleted user, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. The user affiliated to the token must have at least all the permissions of the other user. If the user affiliated to the token has the manage_users_of_my_teams permission, the deleted user will need to belong to at least one of the teams he’s the leader of.","operationId":"deleteUser","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"description":"Success"}},"summary":"Deleting a user","tags":["Users"]},"get":{"description":"This method renders a user from given id.","operationId":"getUser","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"description":"Success"}},"summary":"Getting a user from its id","tags":["Users"]}}},"servers":[{"url":"https://DOMAIN.api.engagement.dimelo.com/1.0"}],"tags":[{"name":"Communities"}]}